/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.22.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ComGithubOpenshiftApiImageV1TagImportPolicy } from './comGithubOpenshiftApiImageV1TagImportPolicy';
import { ComGithubOpenshiftApiImageV1TagReferencePolicy } from './comGithubOpenshiftApiImageV1TagReferencePolicy';
import { V1ObjectReferenceV2 } from './v1ObjectReferenceV2';

/**
* TagReference specifies optional annotations for images using this tag and an optional reference to an ImageStreamTag, ImageStreamImage, or DockerImage this tag should track.
*/
export class ComGithubOpenshiftApiImageV1TagReference {
    /**
    * Optional; if specified, annotations that are applied to images retrieved via ImageStreamTags.
    */
    'annotations'?: { [key: string]: string; };
    'from'?: V1ObjectReferenceV2;
    /**
    * Generation is a counter that tracks mutations to the spec tag (user intent). When a tag reference is changed the generation is set to match the current stream generation (which is incremented every time spec is changed). Other processes in the system like the image importer observe that the generation of spec tag is newer than the generation recorded in the status and use that as a trigger to import the newest remote tag. To trigger a new import, clients may set this value to zero which will reset the generation to the latest stream generation. Legacy clients will send this value as nil which will be merged with the current tag generation.
    */
    'generation'?: number;
    'importPolicy'?: ComGithubOpenshiftApiImageV1TagImportPolicy;
    /**
    * Name of the tag
    */
    'name': string;
    /**
    * Reference states if the tag will be imported. Default value is false, which means the tag will be imported.
    */
    'reference'?: boolean;
    'referencePolicy'?: ComGithubOpenshiftApiImageV1TagReferencePolicy;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "annotations",
            "baseName": "annotations",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "from",
            "baseName": "from",
            "type": "V1ObjectReferenceV2"
        },
        {
            "name": "generation",
            "baseName": "generation",
            "type": "number"
        },
        {
            "name": "importPolicy",
            "baseName": "importPolicy",
            "type": "ComGithubOpenshiftApiImageV1TagImportPolicy"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "reference",
            "baseName": "reference",
            "type": "boolean"
        },
        {
            "name": "referencePolicy",
            "baseName": "referencePolicy",
            "type": "ComGithubOpenshiftApiImageV1TagReferencePolicy"
        }    ];

    static getAttributeTypeMap() {
        return ComGithubOpenshiftApiImageV1TagReference.attributeTypeMap;
    }
}

