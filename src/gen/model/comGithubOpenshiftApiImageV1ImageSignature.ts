/**
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.22.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ComGithubOpenshiftApiImageV1SignatureCondition } from './comGithubOpenshiftApiImageV1SignatureCondition';
import { ComGithubOpenshiftApiImageV1SignatureIssuer } from './comGithubOpenshiftApiImageV1SignatureIssuer';
import { ComGithubOpenshiftApiImageV1SignatureSubject } from './comGithubOpenshiftApiImageV1SignatureSubject';
import { V1ObjectMeta } from './v1ObjectMeta';

/**
* ImageSignature holds a signature of an image. It allows to verify image identity and possibly other claims as long as the signature is trusted. Based on this information it is possible to restrict runnable images to those matching cluster-wide policy. Mandatory fields should be parsed by clients doing image verification. The others are parsed from signature\'s content by the server. They serve just an informative purpose.
*/
export class ComGithubOpenshiftApiImageV1ImageSignature {
    /**
    * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    */
    'apiVersion'?: string;
    /**
    * Conditions represent the latest available observations of a signature\'s current state.
    */
    'conditions'?: Array<ComGithubOpenshiftApiImageV1SignatureCondition>;
    /**
    * Required: An opaque binary string which is an image\'s signature.
    */
    'content': string;
    /**
    * If specified, it is the time of signature\'s creation.
    */
    'created'?: Date;
    /**
    * A human readable string representing image\'s identity. It could be a product name and version, or an image pull spec (e.g. \"registry.access.redhat.com/rhel7/rhel:7.2\").
    */
    'imageIdentity'?: string;
    'issuedBy'?: ComGithubOpenshiftApiImageV1SignatureIssuer;
    'issuedTo'?: ComGithubOpenshiftApiImageV1SignatureSubject;
    /**
    * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    */
    'kind'?: string;
    'metadata'?: V1ObjectMeta;
    /**
    * Contains claims from the signature.
    */
    'signedClaims'?: { [key: string]: string; };
    /**
    * Required: Describes a type of stored blob.
    */
    'type': string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "apiVersion",
            "baseName": "apiVersion",
            "type": "string"
        },
        {
            "name": "conditions",
            "baseName": "conditions",
            "type": "Array<ComGithubOpenshiftApiImageV1SignatureCondition>"
        },
        {
            "name": "content",
            "baseName": "content",
            "type": "string"
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "Date"
        },
        {
            "name": "imageIdentity",
            "baseName": "imageIdentity",
            "type": "string"
        },
        {
            "name": "issuedBy",
            "baseName": "issuedBy",
            "type": "ComGithubOpenshiftApiImageV1SignatureIssuer"
        },
        {
            "name": "issuedTo",
            "baseName": "issuedTo",
            "type": "ComGithubOpenshiftApiImageV1SignatureSubject"
        },
        {
            "name": "kind",
            "baseName": "kind",
            "type": "string"
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "V1ObjectMeta"
        },
        {
            "name": "signedClaims",
            "baseName": "signedClaims",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return ComGithubOpenshiftApiImageV1ImageSignature.attributeTypeMap;
    }
}

